<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Renato Lelis - python</title><link href="https://rjlelis.github.io/" rel="alternate"></link><link href="https://rjlelis.github.io/feeds/python.atom.xml" rel="self"></link><id>https://rjlelis.github.io/</id><updated>2020-05-10T00:00:00-03:00</updated><subtitle>Desenvolvedor | Aspirante a musico</subtitle><entry><title>Trabalhando com JSON no Python</title><link href="https://rjlelis.github.io/trabalhando-json-python.html" rel="alternate"></link><published>2019-09-22T00:00:00-03:00</published><updated>2020-05-10T00:00:00-03:00</updated><author><name>Renato Lelis</name></author><id>tag:rjlelis.github.io,2019-09-22:/trabalhando-json-python.html</id><summary type="html">&lt;p&gt;Como facilmente manipular um JSON com Python&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Json" src="/images/json.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;O JSON (Javascript Object Notation) é o formato mais usado para integração entre sistemas. Toda a linguagem de programação tem sua maneira de manipulá-lo. O Python tem uma biblioteca, chamada json, muito boa e simples de usar para lidar com este tipo de formatação de dados.&lt;/p&gt;
&lt;p&gt;A biblioteca &lt;strong&gt;json&lt;/strong&gt; tem 4 métodos básicos, tanto para serializar um objeto, quanto para deserializar-lo.&lt;/p&gt;
&lt;h2&gt;dump e dumps&lt;/h2&gt;
&lt;p&gt;Usamos o &lt;strong&gt;dump&lt;/strong&gt; e o &lt;strong&gt;dumps&lt;/strong&gt; para transformar um objeto do Python (listas, dicionários, tuplas) nos formato &lt;strong&gt;JSON&lt;/strong&gt; (serializar). O primeiro serve para jogar um objeto diretamente em um arquivo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="n"&gt;dados&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;nome&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Renato Lelis&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;profissao&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Desenvolvedor de sistemas&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dados.json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;json_file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dados&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;json_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;No exemplo acima eu criei um dicionário com alguns dados e o inseri dentro de um arquivo &lt;strong&gt;.json&lt;/strong&gt;. O método &lt;strong&gt;dump&lt;/strong&gt; recebe dois argumentos obrigatórios, o objeto que vai ser serializado e o arquivo em que ele vai ser gravado. O resultado:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;nome&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Renato Lelis&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;profissao&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Desenvolvedor de sistemas&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;O terceiro argumento é número da indentação do &lt;strong&gt;JSON&lt;/strong&gt;. Não é obrigatório mas em termos de visualização é um bom argumento para adicionar. Sem ele seu arquivo ficaria assim:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;nome&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Renato Lelis&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;profissao&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Desenvolvedor de sistemas&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;E o &lt;strong&gt;dumps&lt;/strong&gt; simplesmente transforma o objeto em string (o &lt;code&gt;s&lt;/code&gt; no final do &lt;strong&gt;dumps&lt;/strong&gt; é uma dica) em vez de gravar o objeto dentro de um arquivo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="n"&gt;dados&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;nome&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Renato Lelis&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;profissao&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Desenvolvedor de sistemas&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;dados_json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dados&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dados_json&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;# &amp;lt;class &amp;#39;str&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Com &lt;strong&gt;dumps&lt;/strong&gt; só precisamos dizer qual objeto serializar e ele faz o resto. O argumento &lt;strong&gt;indent&lt;/strong&gt; também pode ser utilizado neste método se quiser usá-lo.&lt;/p&gt;
&lt;h2&gt;load e loads&lt;/h2&gt;
&lt;p&gt;Usamos o &lt;strong&gt;load&lt;/strong&gt; para fazer o oposto do &lt;strong&gt;dump&lt;/strong&gt;, ou seja, deserializar o &lt;strong&gt;JSON&lt;/strong&gt; em um objeto do Python.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;

&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dados.json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;json_file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;dados&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dados&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dados&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;# {&amp;#39;nome&amp;#39;: &amp;#39;Renato Lelis&amp;#39;, &amp;#39;profissao&amp;#39;: &amp;#39;Desenvolvedor de sistemas&amp;#39;}&lt;/span&gt;
&lt;span class="c1"&gt;# &amp;lt;class &amp;#39;dict&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lendo o arquivo que criamos na seção anterior, o método &lt;strong&gt;load&lt;/strong&gt; só precisa de um argumento, o arquivo que contém o &lt;strong&gt;JSON&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;E o método &lt;strong&gt;loads&lt;/strong&gt;, assim como o &lt;strong&gt;dumps&lt;/strong&gt;, é para lidar com &lt;strong&gt;JSON&lt;/strong&gt; em formato de string. No caso do &lt;strong&gt;loads&lt;/strong&gt;, transformar uma string em um objeto Python.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="n"&gt;dados&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{&amp;quot;nome&amp;quot;: &amp;quot;Renato Lelis&amp;quot;,&amp;quot;profissao&amp;quot;: &amp;quot;Desenvolvedor de sistemas&amp;quot;}&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;dados_json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dados&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dados_json&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;# &amp;lt;class &amp;#39;dict&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Neste artigo, vimos o quão fácil é de se manipular o &lt;strong&gt;JSON&lt;/strong&gt; com a biblioteca padrão do Python.&lt;/p&gt;</content><category term="python"></category><category term="python"></category><category term="json"></category></entry></feed>